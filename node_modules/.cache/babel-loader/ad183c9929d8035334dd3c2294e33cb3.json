{"ast":null,"code":"var _jsxFileName = \"/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header';\nimport PlayerList from './PlayerList';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.prevPlayerId = 4;\n\n    this.handleScoreChange = (index, delta) => {\n      this.setState(prevState => ({\n        score: prevState.players[index].score += delta\n      }));\n      console.log(index, delta);\n      /*used to show index tracking on click handler when index was added */\n    };\n\n    this.handleAddPlayer = name => {\n      this.setState(prevState => {\n        return {\n          players: [...prevState.players, {\n            name: name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }]\n        };\n      });\n    };\n\n    this.handleRemovePlayer = id => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    };\n\n    this.getHighScore = () => {\n      return this.state.players.reduce((highScore, player) => {\n        if (player.score > highScore) {\n          return player.score;\n        }\n\n        return highScore;\n      }, 1);\n    };\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      value: {\n        players: this.state.players,\n        actions: {\n          changeScore: this.handleScoreChange,\n          removePlayer: this.handleRemovePlayer,\n          addPlayer: this.handleAddPlayer\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scoreboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(PlayerList, {\n      getHighScore: this.getHighScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(AddPlayerForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/App.js"],"names":["React","Component","Provider","Header","PlayerList","AddPlayerForm","App","prevPlayerId","handleScoreChange","index","delta","setState","prevState","score","players","console","log","handleAddPlayer","name","id","handleRemovePlayer","filter","p","getHighScore","state","reduce","highScore","player","render","actions","changeScore","removePlayer","addPlayer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAGxBM,YAHwB,GAGT,CAHS;;AAAA,SAKxBC,iBALwB,GAKJ,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,WAAKC,QAAL,CAAeC,SAAS,KAAK;AAC3BC,QAAAA,KAAK,EAAED,SAAS,CAACE,OAAV,CAAkBL,KAAlB,EAAyBI,KAAzB,IAAkCH;AADd,OAAL,CAAxB;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAmBC,KAAnB;AAA2B;AAC5B,KAVuB;;AAAA,SAYxBO,eAZwB,GAYLC,IAAD,IAAU;AAC1B,WAAKP,QAAL,CAAeC,SAAS,IAAI;AAC1B,eAAO;AACLE,UAAAA,OAAO,EAAE,CACP,GAAGF,SAAS,CAACE,OADN,EAEP;AACEI,YAAAA,IAAI,EAAEA,IADR;AAEEL,YAAAA,KAAK,EAAE,CAFT;AAGEM,YAAAA,EAAE,EAAE,KAAKZ,YAAL,IAAqB;AAH3B,WAFO;AADJ,SAAP;AAUD,OAXD;AAYD,KAzBuB;;AAAA,SA2BxBa,kBA3BwB,GA2BFD,EAAD,IAAQ;AAC3B,WAAKR,QAAL,CAAeC,SAAS,IAAI;AAC1B,eAAO;AACLE,UAAAA,OAAO,EAAEF,SAAS,CAACE,OAAV,CAAkBO,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAvC;AADJ,SAAP;AAGD,OAJD;AAKD,KAjCuB;;AAAA,SAmCxBI,YAnCwB,GAmCT,MAAM;AACnB,aAAO,KAAKC,KAAL,CAAWV,OAAX,CAAmBW,MAAnB,CAA0B,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACtD,YAAIA,MAAM,CAACd,KAAP,GAAea,SAAnB,EAA8B;AAC5B,iBAAOC,MAAM,CAACd,KAAd;AACD;;AACD,eAAOa,SAAP;AACD,OALM,EAKJ,CALI,CAAP;AAMD,KA1CuB;AAAA;;AA4C1BE,EAAAA,MAAM,GAAG;AAEP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AACfd,QAAAA,OAAO,EAAE,KAAKU,KAAL,CAAWV,OADL;AAEfe,QAAAA,OAAO,EAAE;AACTC,UAAAA,WAAW,EAAE,KAAKtB,iBADT;AAETuB,UAAAA,YAAY,EAAE,KAAKX,kBAFV;AAGTY,UAAAA,SAAS,EAAE,KAAKf;AAHP;AAFM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,UAAD;AACE,MAAA,YAAY,EAAE,KAAKM,YADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CARF,CADF;AAmBD;;AAjEyB;;AAoE5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Provider } from './Context';\nimport Header from './Header';\nimport PlayerList from './PlayerList';\nimport AddPlayerForm from './AddPlayerForm';\n\n\nclass App extends Component {\n  \n  //player id counter\n    prevPlayerId = 4;\n\n    handleScoreChange = (index, delta) => {\n      this.setState( prevState => ({\n        score: prevState.players[index].score += delta\n      }));\n      console.log(index, delta); /*used to show index tracking on click handler when index was added */\n    }\n\n    handleAddPlayer = (name) => {\n      this.setState( prevState => {\n        return {\n          players: [\n            ...prevState.players,\n            {\n              name: name,\n              score: 0,\n              id: this.prevPlayerId += 1\n            }\n          ]\n        };\n      });\n    }\n\n    handleRemovePlayer = (id) => {\n      this.setState( prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    }\n\n    getHighScore = () => {\n      return this.state.players.reduce((highScore, player) => {\n        if (player.score > highScore) {\n          return player.score;\n        }\n        return highScore;\n      }, 1);\n    };\n\n  render() {\n\n    return (\n      <Provider value={{\n        players: this.state.players,\n        actions: {\n        changeScore: this.handleScoreChange,\n        removePlayer: this.handleRemovePlayer,\n        addPlayer: this.handleAddPlayer\n        }\n        }}>\n        <div className=\"scoreboard\">\n          <Header />\n          <PlayerList \n            getHighScore={this.getHighScore}         \n          />   \n\n          <AddPlayerForm />\n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}