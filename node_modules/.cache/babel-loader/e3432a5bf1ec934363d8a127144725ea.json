{"ast":null,"code":"var _jsxFileName = \"/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/PlayerList.js\";\nimport React from 'react';\nimport { Consumer } from './Context';\nimport PropTypes from 'prop-types';\nimport Player from './Player';\n\nconst PlayerList = ({\n  getHighScore,\n  changeScore,\n  removePlayer\n}) => {\n  return React.createElement(Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, context => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, context.map((player, index) => React.createElement(Player, {\n    index: index,\n    key: player.id.toString(),\n    id: player.id,\n    name: player.name,\n    score: player.score,\n    changeScore: changeScore,\n    removePlayer: removePlayer,\n    isHighScore: getHighScore() === player.score //is a players score prop equal to the high score?             \n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }))));\n};\n\nPlayerList.propTypes = {\n  changeScore: PropTypes.func.isRequired,\n  removePlayer: PropTypes.func.isRequired\n};\nexport default PlayerList;","map":{"version":3,"sources":["/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/PlayerList.js"],"names":["React","Consumer","PropTypes","Player","PlayerList","getHighScore","changeScore","removePlayer","context","map","player","index","id","toString","name","score","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA;AAA5B,CAAD,KAA+C;AAChE,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,OAAO,IACP,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAa,CAACC,MAAD,EAASC,KAAT,KACZ,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,GAAG,EAAED,MAAM,CAACE,EAAP,CAAUC,QAAV,EAFP;AAGE,IAAA,EAAE,EAAEH,MAAM,CAACE,EAHb;AAIE,IAAA,IAAI,EAAEF,MAAM,CAACI,IAJf;AAKE,IAAA,KAAK,EAAEJ,MAAM,CAACK,KALhB;AAME,IAAA,WAAW,EAAET,WANf;AAOE,IAAA,YAAY,EAAEC,YAPhB;AAQE,IAAA,WAAW,EAAGF,YAAY,OAAOK,MAAM,CAACK,KAR1C,CAQiD;AARjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFJ,CADF;AAoBD,CArBD;;AAuBAX,UAAU,CAACY,SAAX,GAAuB;AACrBV,EAAAA,WAAW,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADP;AAErBX,EAAAA,YAAY,EAAEL,SAAS,CAACe,IAAV,CAAeC;AAFR,CAAvB;AAKA,eAAed,UAAf","sourcesContent":["import React from 'react';\nimport { Consumer } from './Context';\nimport PropTypes from 'prop-types';\nimport Player from './Player';\n\nconst PlayerList = ({getHighScore, changeScore, removePlayer}) => {\n  return (\n    <Consumer>\n      { context => (\n        <React.Fragment>\n          {context.map( (player, index) =>\n            <Player \n              index={index}\n              key={player.id.toString()}\n              id={player.id}\n              name={player.name}\n              score={player.score}\n              changeScore={changeScore}\n              removePlayer={removePlayer}\n              isHighScore ={getHighScore() === player.score} //is a players score prop equal to the high score?             \n            />\n          )}\n        </React.Fragment>\n      )}\n    </Consumer>\n  );\n}\n\nPlayerList.propTypes = {\n  changeScore: PropTypes.func.isRequired,\n  removePlayer: PropTypes.func.isRequired,\n};\n\nexport default PlayerList;"]},"metadata":{},"sourceType":"module"}