{"ast":null,"code":"var _jsxFileName = \"/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/PlayerList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Player from './Player';\n\nconst PlayerList = ({\n  players,\n  getHighScore,\n  changeScore,\n  removePlayer\n}) => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, players.map((player, index) => React.createElement(Player, {\n    index: index,\n    key: player.id.toString(),\n    id: player.id,\n    name: player.name,\n    score: player.score,\n    changeScore: changeScore,\n    removePlayer: removePlayer,\n    isHighScore: getHighScore() === player.score //is a players score prop equal to the high score?             \n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })));\n};\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object),\n  changeScore: PropTypes.func.isRequired,\n  removePlayer: PropTypes.func.isRequired\n};\nexport default PlayerList;","map":{"version":3,"sources":["/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/PlayerList.js"],"names":["React","PropTypes","Player","PlayerList","players","getHighScore","changeScore","removePlayer","map","player","index","id","toString","name","score","propTypes","arrayOf","object","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA,WAAxB;AAAqCC,EAAAA;AAArC,CAAD,KAAwD;AACzE,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,CAACI,GAAR,CAAa,CAACC,MAAD,EAASC,KAAT,KACZ,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEA,KADT;AAEE,IAAA,GAAG,EAAED,MAAM,CAACE,EAAP,CAAUC,QAAV,EAFP;AAGE,IAAA,EAAE,EAAEH,MAAM,CAACE,EAHb;AAIE,IAAA,IAAI,EAAEF,MAAM,CAACI,IAJf;AAKE,IAAA,KAAK,EAAEJ,MAAM,CAACK,KALhB;AAME,IAAA,WAAW,EAAER,WANf;AAOE,IAAA,YAAY,EAAEC,YAPhB;AAQE,IAAA,WAAW,EAAGF,YAAY,OAAOI,MAAM,CAACK,KAR1C,CAQiD;AARjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAgBD,CAjBD;;AAmBAX,UAAU,CAACY,SAAX,GAAuB;AACrBX,EAAAA,OAAO,EAAEH,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,MAA5B,CADY;AAErBX,EAAAA,WAAW,EAAEL,SAAS,CAACiB,IAAV,CAAeC,UAFP;AAGrBZ,EAAAA,YAAY,EAAEN,SAAS,CAACiB,IAAV,CAAeC;AAHR,CAAvB;AAMA,eAAehB,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Player from './Player';\n\nconst PlayerList = ({players, getHighScore, changeScore, removePlayer}) => {\n  return (\n    <React.Fragment>\n      {players.map( (player, index) =>\n        <Player \n          index={index}\n          key={player.id.toString()}\n          id={player.id}\n          name={player.name}\n          score={player.score}\n          changeScore={changeScore}\n          removePlayer={removePlayer}\n          isHighScore ={getHighScore() === player.score} //is a players score prop equal to the high score?             \n        />\n      )}\n    </React.Fragment>\n  );\n}\n\nPlayerList.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object),\n  changeScore: PropTypes.func.isRequired,\n  removePlayer: PropTypes.func.isRequired,\n};\n\nexport default PlayerList;"]},"metadata":{},"sourceType":"module"}