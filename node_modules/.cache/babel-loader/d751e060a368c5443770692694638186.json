{"ast":null,"code":"var _jsxFileName = \"/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/Context/index.js\";\nimport React, { Component } from 'react';\nconst ScoreboardContext = React.createContext();\nexport class Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [{\n        name: \"Bobby\",\n        score: 0,\n        id: 1\n      }, {\n        name: \"Treasure\",\n        score: 0,\n        id: 2\n      }, {\n        name: \"Ashley\",\n        score: 0,\n        id: 3\n      }, {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }]\n    };\n    this.prevPlayerId = 4;\n\n    this.handleScoreChange = (index, delta) => {\n      this.setState(prevState => ({\n        score: prevState.players[index].score += delta\n      }));\n      console.log(index, delta);\n      /*used to show index tracking on click handler when index was added */\n    };\n\n    this.handleAddPlayer = name => {\n      this.setState(prevState => {\n        return {\n          players: [...prevState.players, {\n            name: name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }]\n        };\n      });\n    };\n\n    this.handleRemovePlayer = id => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      value: {\n        players: this.state.players,\n        actions: {\n          changeScore: this.handleScoreChange,\n          removePlayer: this.handleRemovePlayer,\n          addPlayer: this.handleAddPlayer\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n}\nexport const Consumer = ScoreboardContext.Consumer;","map":{"version":3,"sources":["/Users/bobbybrice/Documents/TreeHouse/unit07/scoreboard/src/components/Context/index.js"],"names":["React","Component","ScoreboardContext","createContext","Provider","state","players","name","score","id","prevPlayerId","handleScoreChange","index","delta","setState","prevState","console","log","handleAddPlayer","handleRemovePlayer","filter","p","render","actions","changeScore","removePlayer","addPlayer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,iBAAiB,GAAGF,KAAK,CAACG,aAAN,EAA1B;AAEA,OAAO,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACNC,MAAAA,OAAO,EAAE,CAAC;AACNC,QAAAA,IAAI,EAAE,OADA;AAENC,QAAAA,KAAK,EAAE,CAFD;AAGNC,QAAAA,EAAE,EAAE;AAHE,OAAD,EAKP;AACEF,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,KAAK,EAAE,CAFT;AAGEC,QAAAA,EAAE,EAAE;AAHN,OALO,EAUP;AACEF,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,KAAK,EAAE,CAFT;AAGEC,QAAAA,EAAE,EAAE;AAHN,OAVO,EAeP;AACEF,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE,CAFT;AAGEC,QAAAA,EAAE,EAAE;AAHN,OAfO;AADH,KAD8B;AAAA,SA0BtCC,YA1BsC,GA0BvB,CA1BuB;;AAAA,SA4BtCC,iBA5BsC,GA4BlB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BP,QAAAA,KAAK,EAAEO,SAAS,CAACT,OAAV,CAAkBM,KAAlB,EAAyBJ,KAAzB,IAAkCK;AADf,OAAL,CAAvB;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBC,KAAnB;AAA2B;AAC5B,KAjCqC;;AAAA,SAmCtCK,eAnCsC,GAmCnBX,IAAD,IAAU;AAC1B,WAAKO,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLT,UAAAA,OAAO,EAAE,CACP,GAAGS,SAAS,CAACT,OADN,EAEP;AACEC,YAAAA,IAAI,EAAEA,IADR;AAEEC,YAAAA,KAAK,EAAE,CAFT;AAGEC,YAAAA,EAAE,EAAE,KAAKC,YAAL,IAAqB;AAH3B,WAFO;AADJ,SAAP;AAUD,OAXD;AAYD,KAhDqC;;AAAA,SAkDtCS,kBAlDsC,GAkDhBV,EAAD,IAAQ;AAC3B,WAAKK,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AACLT,UAAAA,OAAO,EAAES,SAAS,CAACT,OAAV,CAAkBc,MAAlB,CAAyBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASA,EAAvC;AADJ,SAAP;AAGD,OAJD;AAKD,KAxDqC;AAAA;;AA0DtCa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAI;AACfhB,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADL;AAEfiB,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAE,KAAKb,iBADX;AAEPc,UAAAA,YAAY,EAAE,KAAKN,kBAFZ;AAGPO,UAAAA,SAAS,EAAE,KAAKR;AAHT;AAFM,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAtEqC;AAyExC,OAAO,MAAMS,QAAQ,GAAGzB,iBAAiB,CAACyB,QAAnC","sourcesContent":["import React, { Component } from 'react';\n\nconst ScoreboardContext = React.createContext();\n\nexport class Provider extends Component {\n  state = {\n    players: [{\n        name: \"Bobby\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Treasure\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Ashley\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }\n    ]\n  };\n\n  //player id counter\n  prevPlayerId = 4;\n\n  handleScoreChange = (index, delta) => {\n    this.setState(prevState => ({\n      score: prevState.players[index].score += delta\n    }));\n    console.log(index, delta); /*used to show index tracking on click handler when index was added */\n  }\n\n  handleAddPlayer = (name) => {\n    this.setState(prevState => {\n      return {\n        players: [\n          ...prevState.players,\n          {\n            name: name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }\n        ]\n      };\n    });\n  }\n\n  handleRemovePlayer = (id) => {\n    this.setState(prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n  render() {\n    return (\n      <Provider value = {{\n          players: this.state.players,\n          actions: {\n            changeScore: this.handleScoreChange,\n            removePlayer: this.handleRemovePlayer,\n            addPlayer: this.handleAddPlayer\n          }\n        }}>\n        </Provider>\n    );\n  }\n}\n\nexport const Consumer = ScoreboardContext.Consumer;"]},"metadata":{},"sourceType":"module"}